# IntelliJ project files
.idea
*.iml
out
gen

### Vim template
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
.netrwhist
*~

### IPythonNotebook template
# Temporary data
.ipynb_checkpoints/

### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
#lib/
#lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Sphinx documentation
docs/_build/

# PyBuilder
target/

*.ipynb
*.params
# *.json
.vscode/
*.code-workspace/

lib/pycocotools/_mask.c
lib/nms/cpu_nms.c

OUTPUT
OUTPUT/*
models/*
DATASET
DATASET/*
external/
amlt/
amlt/*
MODELS
MODELS/*

eval_seem.sh
train_seem.sh
train_seem_v0.sh

draws/
plot/

Config/
Config/*

*venv/*
./demo_code/*.pt
./demo_code/*.pth
*.pt
*.pth

datasets/coco
*.jpg
*.png
datasets/coco/*
datasets/coco_copy/*
datasets/coco_bijie/*
datasets/coco_right/*
datasets/coco_test/*
mpi4py-3.1.5/*
openmpi-1.10.2/*
datasets/landslide/landslide_wu/*
.xdecoder_data/*
coco/*
data/*
data_1125Ââç/*
datasets/coco_wu/*
datasets/landslide/landslide_luding/*
pth/to/xdecoder_data/coco/*
datasets/lvis/coco_train2017_filtrefgumdval_lvis.json
xdecoder_data/cococopy/*
mpi4py-3.1.5.tar.gz
openmpi-1.10.2.tar.gz
my_folder.tar.gz
